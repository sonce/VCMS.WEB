{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","external \"ng.common\"","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/parent/getOriginFromSrc.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/parent/connectToChild.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/parent/monitorIframeRemoval.js","F:/d/Project/VSoft/VCMS.WEB/dist/shared/__ivy_ngcc__/fesm2015/shared.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/child/validateWindowIsIframe.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/child/handleSynAckMessageFactory.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/parent/validateIframeHasSrcOrSrcDoc.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/connectCallReceiver.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/parent/handleAckMessageFactory.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/enums.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/generateId.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/errorSerialization.js","external \"rxjs\"","external \"rxjs.operators\"","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/startConnectionTimeout.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/child/connectToParent.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/createLogger.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/connectCallSender.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/parent/handleSynMessageFactory.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/index.js","F:/d/Project/VSoft/VCMS.WEB/node_modules/penpal/lib/createDestructor.js","external \"ng.core\"","./src/main.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA,mD;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,KAAK;AACtF,cAAc,SAAS,IAAI,SAAS,EAAE,WAAW;AACjD,CAAC,EAAC;;;;;;;;;;;;;ACzCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AAChB;AACR;AACO;AACc;AACA;AACN;AACK;AACW;AAC1E;AACA;AACA;AACe;AACf,SAAS,qBAAqB,uCAAuC;AACrE,gBAAgB,6DAAY;AAC5B,uBAAuB,iEAAgB;AACvC,WAAW,qBAAqB;AAChC;AACA,QAAQ,6EAA4B;AACpC,sBAAsB,iEAAgB;AACtC;AACA;AACA;AACA;AACA;AACA,6BAA6B,wEAAuB;AACpD,6BAA6B,wEAAuB;AACpD;AACA,sCAAsC,uEAAsB;AAC5D;AACA;AACA;AACA;AACA,sCAAsC,kDAAW;AACjD;AACA;AACA;AACA,sCAAsC,kDAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAe;AAC/C;AACA,QAAQ,qEAAoB;AAC5B;AACA,uCAAuC,sDAAe;AACtD;AACA;AACA,6BAA6B,gDAAS;AACtC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACjEF;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC,EAAC;;;;;;;;;;;;;ACrBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8H;AAC/E;AACP;AACZ;AACS;;AAEG;AACE;;AAE1C,+CAA+C;AAC/C,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,sEAAsE,CAAC,2DAAoB,MAAM,8BAA8B,gBAAgB,2DAAoB,GAAG,iCAAiC,EAAE;AAC9N,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,+DAAwB,EAAE,wIAAwI;AACzL,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,oBAAoB;AAC3B,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,qBAAqB,+DAAwB,EAAE,kEAAkE,uBAAuB,sOAAsO;AAC9W,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,uDAAc,8BAA8B,cAAc,yBAAyB,gCAAgC,aAAa,gBAAgB,SAAS,UAAU,wBAAwB,eAAe,iBAAiB,eAAe,kBAAkB,6BAA6B,aAAa,uCAAuC,mBAAmB,SAAS,aAAa,WAAW,OAAO,kBAAkB,QAAQ,IAAI;AAC5b;AACA,gBAAgB,OAAO,oDAAM,EAAE;AAC/B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,0KAA0K,aAAa;AACvL,gCAAgC,cAAc,MAAM,gCAAgC,aAAa,gBAAgB,SAAS,UAAU,KAAK,eAAe,iBAAiB,eAAe,kBAAkB,UAAU,aAAa,oBAAoB,mBAAmB,SAAS,aAAa,WAAW,OAAO,kBAAkB,QAAQ;AAC1U,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,oDAAM;AACxB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,+DAAwB,iBAAiB;AAC/H,oBAAoB,+DAAwB,EAAE,8HAA8H;AAC5K,QAAQ,4DAAqB;AAC7B,KAAK,EAAE,WAAW,iBAAiB,iGAAiG;AACpI,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,oBAAoB;AAC3B;AACA,KAAK;AACL;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,cAAc,OAAO,yDAAW,qBAAqB;AACrD;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,sBAAsB,EAAE,EAAE,GAAG;AAC5D,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,+DAAwB,EAAE,gLAAgL;AACjO,QAAQ,6DAAsB;AAC9B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,6BAA6B,gBAAgB,yBAAyB,kBAAkB,eAAe,iBAAiB,eAAe,uBAAuB,mBAAmB,IAAI;AAC5L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB,yBAAyB,kBAAkB,eAAe,iBAAiB,eAAe,YAAY,mBAAmB;AACzK,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,oBAAoB,8DAAuB,EAAE,qBAAqB;AAClE,oBAAoB,8DAAuB,EAAE,4CAA4C,kCAAkC,EAAE,aAAa,4DAAY,IAAI;AAC1J,cAAc,oDAAoD,gEAAyB,gBAAgB,4BAA4B,wEAAwE,EAAE,wBAAwB,SAAS,4DAAY,EAAE,EAAE,wBAAwB,wEAAwE,EAAE,EAAE,EAAE,EAAE;AAC1W,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA,0BAA0B,4DAAY;AACtC;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,4BAA4B,0DAAY;AACxC,iCAAiC,0DAAY;AAC7C,kCAAkC,0DAAY;AAC9C;AACA,uCAAuC,0DAAY;AACnD,4BAA4B,0DAAY;AACxC;AACA,2BAA2B,0DAAY;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6DAAc;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,iDAAI;AACnB,kBAAkB,0DAAG;AACrB,0DAA0D;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,0BAA0B,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;AAChL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iCAAiC;AACrF,oBAAoB,wEAAkB,EAAE,0CAA0C,0BAA0B,EAAE,yCAAyC;AACvJ;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;;AAE0I;;AAE1I,kC;;;;;;;;;;;;ACpPA;AAAA;AAAqC;AACtB;AACf;AACA;AACA,qBAAqB,gDAAS;AAC9B;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAuC;AACkB;AACJ;AACrD;AACA;AACA;AACe;AACf,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa,uCAAuC,aAAa;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oEAAmB;AACvD;AACA;AACA,kCAAkC,kEAAiB;AACnD;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACxCF;AAAA;AAAqC;AACtB;AACf;AACA;AACA,qBAAqB,gDAAS;AAC9B;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAsD;AAC8B;AACpF;AACA;AACA;AACA;AACe;AACf,WAAW,iEAAiE;AAC5E;AACA;AACA,6DAA6D,kDAAW;AACxE;AACA;AACA;AACA,mBAAmB,UAAU,gCAAgC,aAAa,uCAAuC,mBAAmB;AACpI;AACA;AACA;AACA,eAAe,uBAAuB;AACtC,eAAe,UAAU,aAAa,WAAW;AACjD;AACA;AACA,uBAAuB,UAAU,YAAY,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU,mBAAmB,WAAW;AACnE;AACA;AACA;AACA,4BAA4B,kDAAW;AACvC;AACA;AACA;AACA;AACA,mCAAmC,iDAAU;AAC7C;AACA,0CAA0C,0EAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sDAAe;AACpD;AACA,oCAAoC,kDAAW;AAC/C;AACA,wCAAwC,iDAAU;AAClD,yCAAyC,0EAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,iDAAU,kCAAkC,iDAAU;AAClK;AACA,2BAA2B,sDAAe;AAC1C;AACA;AACA,kCAAkC,sDAAe;AACjD;AACA,CAAC,EAAC;;;;;;;;;;;;;ACtEF;AAAA;AAAA;AAAyD;AACJ;AACrD;AACA;AACA;AACe;AACf,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,aAAa,uCAAuC,YAAY;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oEAAmB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC,kEAAiB;AACnD;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;AC9CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AAC5B;AACP;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA,CAAC,0CAA0C;;;;;;;;;;;;;AC3B3C;AAAA;AACA;AACA,YAAY,OAAO;AACnB;AACe,yEAAU,EAAC;;;;;;;;;;;;;ACJ1B;AAAA;AAAA;AAAA;AACA;AACA;AACO,yBAAyB,uBAAuB;AACvD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA,kD;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;ACAA;AAAA;AAAoC;AACpC;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,kEAAkE,QAAQ;AAC1E,yBAAyB,gDAAS;AAClC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACR;AACwB;AACL;AACQ;AACP;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,4EAAa;AAC5B,WAAW,iCAAiC,0BAA0B;AACtE,gBAAgB,6DAAY;AAC5B,uBAAuB,iEAAgB;AACvC,WAAW,qBAAqB;AAChC,IAAI,uEAAsB;AAC1B,gCAAgC,2EAA0B;AAC1D;AACA;AACA,4BAA4B,SAAS,kDAAW;AAChD;AACA;AACA;AACA;AACA,sCAAsC,uEAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kDAAW;AACjD;AACA;AACA,+CAA+C,sDAAe;AAC9D;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAe;AAC/C;AACA;AACA,uCAAuC,sDAAe;AACtD;AACA;AACA,6BAA6B,gDAAS;AACtC;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;AC1EF;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACTF;AAAA;AAAA;AAAA;AAAsC;AACkB;AACsB;AAC9E;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,QAAQ;AACnB;AACA,aAAa,OAAO;AACpB;AACe;AACf,WAAW,iEAAiE;AAC5E;AACA,WAAW,UAAU;AACrB;AACA;AACA,mBAAmB,UAAU,YAAY,WAAW;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,WAAW;AACrE,6BAA6B,gDAAS;AACtC;AACA;AACA;AACA,2BAA2B,2DAAU;AACrC;AACA;AACA,8CAA8C,kDAAW;AACzD;AACA;AACA;AACA;AACA,+BAA+B,UAAU,gCAAgC,aAAa,uCAAuC,mBAAmB;AAChJ;AACA;AACA;AACA,2BAA2B,UAAU,aAAa,WAAW;AAC7D,8CAA8C,sDAAe;AAC7D;AACA;AACA,sCAAsC,4EAAgB;AACtD;AACA,iDAAiD,iDAAU;AAC3D;AACA,uCAAuC,sDAAe;AACtD;AACA,4BAA4B,kDAAW;AACvC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACtFF;AAAA;AAAuC;AACvC;AACA;AACA;AACe;AACf;AACA;AACA,wEAAwE,aAAa,uCAAuC,YAAY;AACxI;AACA;AACA;AACA;AACA,oBAAoB,kDAAW;AAC/B;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACC;AACjC;;;;;;;;;;;;;ACFpC;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;ACdF,kD;;;;;;;;;;;;ACCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACe;AACvB,kHAAY,EAAC","file":"shared.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ng.common\"), require(\"rxjs\"), require(\"rxjs.operators\"), require(\"ng.core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"ng.common\", \"rxjs\", \"rxjs.operators\", \"ng.core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shared\"] = factory(require(\"ng.common\"), require(\"rxjs\"), require(\"rxjs.operators\"), require(\"ng.core\"));\n\telse\n\t\troot[\"shared\"] = factory(root[\"ng.common\"], root[\"rxjs\"], root[\"rxjs.operators\"], root[\"ng.core\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__0S4P__, __WEBPACK_EXTERNAL_MODULE_Vgaj__, __WEBPACK_EXTERNAL_MODULE_aP7H__, __WEBPACK_EXTERNAL_MODULE_vOrQ__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0S4P__;","const DEFAULT_PORT_BY_PROTOCOL = {\n    'http:': '80',\n    'https:': '443'\n};\nconst URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nconst opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n */\nexport default (src) => {\n    if (src && opaqueOriginSchemes.find(scheme => src.startsWith(scheme))) {\n        // The origin of the child document is an opaque origin and its\n        // serialization is \"null\"\n        // https://html.spec.whatwg.org/multipage/origin.html#origin\n        return 'null';\n    }\n    // Note that if src is undefined, then srcdoc is being used instead of src\n    // and we can follow this same logic below to get the origin of the parent,\n    // which is the origin that we will need to use.\n    const location = document.location;\n    const regexResult = URL_REGEX.exec(src);\n    let protocol;\n    let hostname;\n    let port;\n    if (regexResult) {\n        // It's an absolute URL. Use the parsed info.\n        // regexResult[1] will be undefined if the URL starts with //\n        protocol = (regexResult[1] ? regexResult[1] : location.protocol);\n        hostname = regexResult[2];\n        port = regexResult[4];\n    }\n    else {\n        // It's a relative path. Use the current location's info.\n        protocol = location.protocol;\n        hostname = location.hostname;\n        port = location.port;\n    }\n    // If the port is the default for the protocol, we don't want to add it to the origin string\n    // or it won't match the message's event.origin.\n    const portSuffix = port && port !== DEFAULT_PORT_BY_PROTOCOL[protocol] ? `:${port}` : '';\n    return `${protocol}//${hostname}${portSuffix}`;\n};\n","import { ErrorCode, MessageType, NativeEventType } from '../enums';\nimport createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport getOriginFromSrc from './getOriginFromSrc';\nimport handleAckMessageFactory from './handleAckMessageFactory';\nimport handleSynMessageFactory from './handleSynMessageFactory';\nimport monitorIframeRemoval from './monitorIframeRemoval';\nimport startConnectionTimeout from '../startConnectionTimeout';\nimport validateIframeHasSrcOrSrcDoc from './validateIframeHasSrcOrSrcDoc';\n/**\n * Attempts to establish communication with an iframe.\n */\nexport default (options) => {\n    let { iframe, methods = {}, childOrigin, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor();\n    const { onDestroy, destroy } = destructor;\n    if (!childOrigin) {\n        validateIframeHasSrcOrSrcDoc(iframe);\n        childOrigin = getOriginFromSrc(iframe.src);\n    }\n    // If event.origin is \"null\", the remote protocol is file: or data: and we\n    // must post messages with \"*\" as targetOrigin when sending messages.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n    const originForSending = childOrigin === 'null' ? '*' : childOrigin;\n    const handleSynMessage = handleSynMessageFactory(log, methods, childOrigin, originForSending);\n    const handleAckMessage = handleAckMessageFactory(methods, childOrigin, originForSending, destructor, log);\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            if (event.source !== iframe.contentWindow || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.Syn) {\n                handleSynMessage(event);\n                return;\n            }\n            if (event.data.penpal === MessageType.Ack) {\n                const callSender = handleAckMessage(event);\n                if (callSender) {\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n                return;\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        log('Parent: Awaiting handshake');\n        monitorIframeRemoval(iframe, destructor);\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (!error) {\n                error = new Error('Connection destroyed');\n                error.code = ErrorCode.ConnectionDestroyed;\n            }\n            reject(error);\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        }\n    };\n};\n","const CHECK_IFRAME_IN_DOC_INTERVAL = 60000;\n/**\n * Monitors for iframe removal and destroys connection if iframe\n * is found to have been removed from DOM. This is to prevent memory\n * leaks when the iframe is removed from the document and the consumer\n * hasn't called destroy(). Without this, event listeners attached to\n * the window would stick around and since the event handlers have a\n * reference to the iframe in their closures, the iframe would stick\n * around too.\n */\nexport default (iframe, destructor) => {\n    const { destroy, onDestroy } = destructor;\n    const checkIframeInDocIntervalId = setInterval(() => {\n        if (!iframe.isConnected) {\n            clearInterval(checkIframeInDocIntervalId);\n            destroy();\n        }\n    }, CHECK_IFRAME_IN_DOC_INTERVAL);\n    onDestroy(() => {\n        clearInterval(checkIframeInDocIntervalId);\n    });\n};\n","import { Component, EventEmitter, Output, Input, HostBinding, NgModule, ɵɵdefineInjectable, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { connectToChild } from 'penpal';\nimport { from } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction TabsComponent_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TabsComponent_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const tab_r1 = ctx.$implicit; const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.selectTab(tab_r1); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"tab--active\", !tab_r1.hidden);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", tab_r1.title, \" \");\n} }\nconst _c0 = [\"*\"];\nconst _c1 = [\"sharedBtn\", \"\"];\nclass SharedComponent {\r\n}\nSharedComponent.ɵfac = function SharedComponent_Factory(t) { return new (t || SharedComponent)(); };\nSharedComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SharedComponent, selectors: [[\"lib-shared-component\"]], decls: 2, vars: 0, template: function SharedComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"h4\");\n        ɵngcc0.ɵɵtext(1, \"Shared component\");\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SharedComponent, [{\n        type: Component,\n        args: [{\n                selector: 'lib-shared-component',\n                template: ` <h4>Shared component</h4> `\n            }]\n    }], null, null); })();\n\nclass TabsComponent {\r\n    constructor() {\r\n        this.tabs = [];\r\n        this.selected = new EventEmitter();\r\n    }\r\n    addTab(tabComponent) {\r\n        if (!this.tabs.length) {\r\n            tabComponent.hidden = false;\r\n        }\r\n        this.tabs.push(tabComponent);\r\n    }\r\n    selectTab(tabComponent) {\r\n        this.tabs.map((tab) => (tab.hidden = true));\r\n        tabComponent.hidden = false;\r\n        this.selected.emit(tabComponent);\r\n    }\r\n}\nTabsComponent.ɵfac = function TabsComponent_Factory(t) { return new (t || TabsComponent)(); };\nTabsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabsComponent, selectors: [[\"lib-shared-tabs\"]], outputs: { selected: \"selected\" }, ngContentSelectors: _c0, decls: 4, vars: 1, consts: [[1, \"tabs\"], [\"class\", \"tab\", 3, \"tab--active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-body\"], [1, \"tab\", 3, \"click\"]], template: function TabsComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, TabsComponent_li_1_Template, 2, 3, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    } }, directives: [ɵngcc1.NgForOf], styles: [\"[_nghost-%COMP%]{display:block}.tabs[_ngcontent-%COMP%]{border-bottom:1px solid #ebeef2;display:flex;list-style:none;margin:0;padding:0}.tab[_ngcontent-%COMP%]{cursor:pointer;line-height:40px;padding:0 20px;position:relative}.tab-body[_ngcontent-%COMP%]{padding:20px}.tab--active[_ngcontent-%COMP%]:before{background:#03a9f4;bottom:0;content:\\\"\\\";height:3px;left:0;position:absolute;right:0}\"] });\r\nTabsComponent.propDecorators = {\r\n    selected: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsComponent, [{\n        type: Component,\n        args: [{\n                selector: 'lib-shared-tabs',\n                template: \"<ul class=\\\"tabs\\\">\\r\\n  <li *ngFor=\\\"let tab of tabs\\\" (click)=\\\"selectTab(tab)\\\" class=\\\"tab\\\" [class.tab--active]=\\\"!tab.hidden\\\">\\r\\n    {{ tab.title }}\\r\\n  </li>\\r\\n</ul>\\r\\n<div class=\\\"tab-body\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                styles: [\":host{display:block}.tabs{border-bottom:1px solid #ebeef2;display:flex;list-style:none;margin:0;padding:0}.tab{cursor:pointer;line-height:40px;padding:0 20px;position:relative}.tab-body{padding:20px}.tab--active:before{background:#03a9f4;bottom:0;content:\\\"\\\";height:3px;left:0;position:absolute;right:0}\"]\n            }]\n    }], function () { return []; }, { selected: [{\n            type: Output\n        }] }); })();\n\nclass TabComponent {\r\n    constructor(tabsComponent) {\r\n        this.hidden = true;\r\n        tabsComponent.addTab(this);\r\n    }\r\n}\nTabComponent.ɵfac = function TabComponent_Factory(t) { return new (t || TabComponent)(ɵngcc0.ɵɵdirectiveInject(TabsComponent)); };\nTabComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TabComponent, selectors: [[\"lib-shared-tab\"]], hostVars: 1, hostBindings: function TabComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"hidden\", ctx.hidden);\n    } }, inputs: { title: \"title\" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function TabComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\r\nTabComponent.ctorParameters = () => [\r\n    { type: TabsComponent }\r\n];\r\nTabComponent.propDecorators = {\r\n    title: [{ type: Input }],\r\n    hidden: [{ type: HostBinding, args: ['hidden',] }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabComponent, [{\n        type: Component,\n        args: [{\n                selector: 'lib-shared-tab',\n                template: '<ng-content></ng-content>'\n            }]\n    }], function () { return [{ type: TabsComponent }]; }, { hidden: [{\n            type: HostBinding,\n            args: ['hidden']\n        }], title: [{\n            type: Input\n        }] }); })();\n\nclass ButtonComponent {\r\n}\nButtonComponent.ɵfac = function ButtonComponent_Factory(t) { return new (t || ButtonComponent)(); };\nButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ButtonComponent, selectors: [[\"button\", \"sharedBtn\", \"\"]], attrs: _c1, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ButtonComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\"[_nghost-%COMP%]{background:#fff;border:1px solid #d8dde6;border-radius:6px;cursor:pointer;line-height:40px;padding:0 15px}[_nghost-%COMP%]:hover{background:#f3f7fb}\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ButtonComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'button[sharedBtn]',\n                template: '<ng-content></ng-content>',\n                styles: [\":host{background:#fff;border:1px solid #d8dde6;border-radius:6px;cursor:pointer;line-height:40px;padding:0 15px}:host:hover{background:#f3f7fb}\"]\n            }]\n    }], null, null); })();\n\nconst sharedComponents = [SharedComponent, ButtonComponent, TabComponent, TabsComponent];\r\nclass SharedModule {\r\n}\nSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SharedModule });\nSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SharedModule_Factory(t) { return new (t || SharedModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedModule, { declarations: function () { return [SharedComponent, ButtonComponent, TabComponent, TabsComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SharedComponent, ButtonComponent, TabComponent, TabsComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SharedModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [...sharedComponents],\n                exports: [...sharedComponents]\n            }]\n    }], null, null); })();\n\nclass ChildIframeEvents {\r\n    constructor() {\r\n        this.onloaded = new EventEmitter();\r\n        this.onsizechanged = new EventEmitter();\r\n        this.onScriptInited = new EventEmitter();\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.onTrackHoverElement = new EventEmitter();\r\n        this.onScroll = new EventEmitter();\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        this.onClick = new EventEmitter();\r\n    }\r\n}\n\nclass IFrameChatService {\r\n    // constructor(iframe: HTMLIFrameElement, parentAPI?: IParentWindowAPI) {\r\n    // \tif (parentAPI) parentAPI.iframeChatService = this;\r\n    // \tthis.Init(iframe, parentAPI);\r\n    // }\r\n    constructor() {\r\n        /** 是否已经握手初始化 */\r\n        this.hadInit = false;\r\n        /** 子IFRAME的事件 */\r\n        this.childEvents = new ChildIframeEvents();\r\n        /**\r\n         * 链接到iframe\r\n         */\r\n        this.onConnected = new EventEmitter();\r\n        debugger;\r\n    }\r\n    /**\r\n     * 初始化Postmate，用于父子页面的交互\r\n     */\r\n    Init(iframe, parentAPI) {\r\n        if (parentAPI)\r\n            parentAPI.iframeChatService = this;\r\n        if (this.childAPI)\r\n            this.connection.destroy();\r\n        this.connection = connectToChild({\r\n            // The iframe to which a connection should be made\r\n            iframe,\r\n            // Methods the parent is exposing to the child\r\n            methods: parentAPI\r\n        });\r\n        return from(this.connection.promise)\r\n            .pipe(tap((child) => {\r\n            this.childAPI = Object.assign(Object.assign({}, child), this.childEvents);\r\n            this.hadInit = true;\r\n            this.onConnected.emit(true);\r\n        }))\r\n            .subscribe();\r\n    }\r\n    destroy() {\r\n        this.hadInit = false;\r\n        if (this.childAPI)\r\n            this.connection.destroy();\r\n    }\r\n}\nIFrameChatService.ɵfac = function IFrameChatService_Factory(t) { return new (t || IFrameChatService)(); };\r\nIFrameChatService.ɵprov = ɵɵdefineInjectable({ factory: function IFrameChatService_Factory() { return new IFrameChatService(); }, token: IFrameChatService, providedIn: \"root\" });\r\nIFrameChatService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IFrameChatService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\nclass TestService {\r\n    constructor() {\r\n        console.log('Test service constructor');\r\n        this.Message = 'aaa';\r\n    }\r\n    HelloWorld() {\r\n        console.log(this.Message);\r\n    }\r\n}\nTestService.ɵfac = function TestService_Factory(t) { return new (t || TestService)(); };\r\nTestService.ɵprov = ɵɵdefineInjectable({ factory: function TestService_Factory() { return new TestService(); }, token: TestService, providedIn: \"any\" });\r\nTestService.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TestService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'any'\n            }]\n    }], function () { return []; }, null); })();\n\n/*\r\n * Public API Surface of shared\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ButtonComponent, ChildIframeEvents, IFrameChatService, SharedComponent, SharedModule, TabComponent, TabsComponent, TestService };\n\n//# sourceMappingURL=shared.js.map","import { ErrorCode } from '../enums';\nexport default () => {\n    if (window === window.top) {\n        const error = new Error('connectToParent() must be called within an iframe');\n        error.code = ErrorCode.NotInIframe;\n        throw error;\n    }\n};\n","import { MessageType } from '../enums';\nimport connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles a SYN-ACK handshake message.\n */\nexport default (parentOrigin, methods, destructor, log) => {\n    const { destroy, onDestroy } = destructor;\n    return (event) => {\n        let originQualifies = parentOrigin instanceof RegExp\n            ? parentOrigin.test(event.origin)\n            : parentOrigin === '*' || parentOrigin === event.origin;\n        if (!originQualifies) {\n            log(`Child: Handshake - Received SYN-ACK from origin ${event.origin} which did not match expected origin ${parentOrigin}`);\n            return;\n        }\n        log('Child: Handshake - Received SYN-ACK, responding with ACK');\n        // If event.origin is \"null\", the remote protocol is file: or data: and we\n        // must post messages with \"*\" as targetOrigin when sending messages.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n        const originForSending = event.origin === 'null' ? '*' : event.origin;\n        const ackMessage = {\n            penpal: MessageType.Ack,\n            methodNames: Object.keys(methods)\n        };\n        window.parent.postMessage(ackMessage, originForSending);\n        const info = {\n            localName: 'Child',\n            local: window,\n            remote: window.parent,\n            originForSending,\n            originForReceiving: event.origin\n        };\n        const destroyCallReceiver = connectCallReceiver(info, methods, log);\n        onDestroy(destroyCallReceiver);\n        const callSender = {};\n        const destroyCallSender = connectCallSender(callSender, info, event.data.methodNames, destroy, log);\n        onDestroy(destroyCallSender);\n        return callSender;\n    };\n};\n","import { ErrorCode } from '../enums';\nexport default (iframe) => {\n    if (!iframe.src && !iframe.srcdoc) {\n        const error = new Error('Iframe must have src or srcdoc property defined.');\n        error.code = ErrorCode.NoIframeSrc;\n        throw error;\n    }\n};\n","import { serializeError } from './errorSerialization';\nimport { MessageType, NativeEventType, NativeErrorName, Resolution } from './enums';\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n */\nexport default (info, methods, log) => {\n    const { localName, local, remote, originForSending, originForReceiving } = info;\n    let destroyed = false;\n    const handleMessageEvent = (event) => {\n        if (event.source !== remote || event.data.penpal !== MessageType.Call) {\n            return;\n        }\n        if (event.origin !== originForReceiving) {\n            log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n            return;\n        }\n        const callMessage = event.data;\n        const { methodName, args, id } = callMessage;\n        log(`${localName}: Received ${methodName}() call`);\n        const createPromiseHandler = (resolution) => {\n            return (returnValue) => {\n                log(`${localName}: Sending ${methodName}() reply`);\n                if (destroyed) {\n                    // It's possible to throw an error here, but it would need to be thrown asynchronously\n                    // and would only be catchable using window.onerror. This is because the consumer\n                    // is merely returning a value from their method and not calling any function\n                    // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n                    // the value of doing so is questionable. Instead, we'll just log a message.\n                    log(`${localName}: Unable to send ${methodName}() reply due to destroyed connection`);\n                    return;\n                }\n                const message = {\n                    penpal: MessageType.Reply,\n                    id,\n                    resolution,\n                    returnValue\n                };\n                if (resolution === Resolution.Rejected &&\n                    returnValue instanceof Error) {\n                    message.returnValue = serializeError(returnValue);\n                    message.returnValueIsError = true;\n                }\n                try {\n                    remote.postMessage(message, originForSending);\n                }\n                catch (err) {\n                    // If a consumer attempts to send an object that's not cloneable (e.g., window),\n                    // we want to ensure the receiver's promise gets rejected.\n                    if (err.name === NativeErrorName.DataCloneError) {\n                        const errorReplyMessage = {\n                            penpal: MessageType.Reply,\n                            id,\n                            resolution: Resolution.Rejected,\n                            returnValue: serializeError(err),\n                            returnValueIsError: true\n                        };\n                        remote.postMessage(errorReplyMessage, originForSending);\n                    }\n                    throw err;\n                }\n            };\n        };\n        new Promise(resolve => resolve(methods[methodName].apply(methods, args))).then(createPromiseHandler(Resolution.Fulfilled), createPromiseHandler(Resolution.Rejected));\n    };\n    local.addEventListener(NativeEventType.Message, handleMessageEvent);\n    return () => {\n        destroyed = true;\n        local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n    };\n};\n","import connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles an ACK handshake message.\n */\nexport default (methods, childOrigin, originForSending, destructor, log) => {\n    const { destroy, onDestroy } = destructor;\n    let destroyCallReceiver;\n    let receiverMethodNames;\n    // We resolve the promise with the call sender. If the child reconnects\n    // (for example, after refreshing or navigating to another page that\n    // uses Penpal, we'll update the call sender with methods that match the\n    // latest provided by the child.\n    const callSender = {};\n    return (event) => {\n        if (event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received ACK message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received ACK');\n        const info = {\n            localName: 'Parent',\n            local: window,\n            remote: event.source,\n            originForSending: originForSending,\n            originForReceiving: childOrigin\n        };\n        // If the child reconnected, we need to destroy the prior call receiver\n        // before setting up a new one.\n        if (destroyCallReceiver) {\n            destroyCallReceiver();\n        }\n        destroyCallReceiver = connectCallReceiver(info, methods, log);\n        onDestroy(destroyCallReceiver);\n        // If the child reconnected, we need to remove the methods from the\n        // previous call receiver off the sender.\n        if (receiverMethodNames) {\n            receiverMethodNames.forEach(receiverMethodName => {\n                delete callSender[receiverMethodName];\n            });\n        }\n        receiverMethodNames = event.data.methodNames;\n        const destroyCallSender = connectCallSender(callSender, info, receiverMethodNames, destroy, log);\n        onDestroy(destroyCallSender);\n        return callSender;\n    };\n};\n","export var MessageType;\n(function (MessageType) {\n    MessageType[\"Call\"] = \"call\";\n    MessageType[\"Reply\"] = \"reply\";\n    MessageType[\"Syn\"] = \"syn\";\n    MessageType[\"SynAck\"] = \"synAck\";\n    MessageType[\"Ack\"] = \"ack\";\n})(MessageType || (MessageType = {}));\nexport var Resolution;\n(function (Resolution) {\n    Resolution[\"Fulfilled\"] = \"fulfilled\";\n    Resolution[\"Rejected\"] = \"rejected\";\n})(Resolution || (Resolution = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ConnectionDestroyed\"] = \"ConnectionDestroyed\";\n    ErrorCode[\"ConnectionTimeout\"] = \"ConnectionTimeout\";\n    ErrorCode[\"NotInIframe\"] = \"NotInIframe\";\n    ErrorCode[\"NoIframeSrc\"] = \"NoIframeSrc\";\n})(ErrorCode || (ErrorCode = {}));\nexport var NativeErrorName;\n(function (NativeErrorName) {\n    NativeErrorName[\"DataCloneError\"] = \"DataCloneError\";\n})(NativeErrorName || (NativeErrorName = {}));\nexport var NativeEventType;\n(function (NativeEventType) {\n    NativeEventType[\"Message\"] = \"message\";\n})(NativeEventType || (NativeEventType = {}));\n","let id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\nexport default () => ++id;\n","/**\n * Converts an error object into a plain object.\n */\nexport const serializeError = ({ name, message, stack }) => ({\n    name,\n    message,\n    stack\n});\n/**\n * Converts a plain object into an error object.\n */\nexport const deserializeError = (obj) => {\n    const deserializedError = new Error();\n    // @ts-ignore\n    Object.keys(obj).forEach(key => (deserializedError[key] = obj[key]));\n    return deserializedError;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE_Vgaj__;","module.exports = __WEBPACK_EXTERNAL_MODULE_aP7H__;","import { ErrorCode } from './enums';\n/**\n * Starts a timeout and calls the callback with an error\n * if the timeout completes before the stop function is called.\n */\nexport default (timeout, callback) => {\n    let timeoutId;\n    if (timeout !== undefined) {\n        timeoutId = window.setTimeout(() => {\n            const error = new Error(`Connection timed out after ${timeout}ms`);\n            error.code = ErrorCode.ConnectionTimeout;\n            callback(error);\n        }, timeout);\n    }\n    return () => {\n        clearTimeout(timeoutId);\n    };\n};\n","import createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport { ErrorCode, MessageType, NativeEventType } from '../enums';\nimport validateWindowIsIframe from './validateWindowIsIframe';\nimport handleSynAckMessageFactory from './handleSynAckMessageFactory';\nimport startConnectionTimeout from '../startConnectionTimeout';\nconst areGlobalsAccessible = () => {\n    try {\n        clearTimeout();\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n};\n/**\n * Attempts to establish communication with the parent window.\n */\nexport default (options = {}) => {\n    const { parentOrigin = '*', methods = {}, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor();\n    const { destroy, onDestroy } = destructor;\n    validateWindowIsIframe();\n    const handleSynAckMessage = handleSynAckMessageFactory(parentOrigin, methods, destructor, log);\n    const sendSynMessage = () => {\n        log('Child: Handshake - Sending SYN');\n        const synMessage = { penpal: MessageType.Syn };\n        const parentOriginForSyn = parentOrigin instanceof RegExp ? '*' : parentOrigin;\n        window.parent.postMessage(synMessage, parentOriginForSyn);\n    };\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            // Under niche scenarios, we get into this function after\n            // the iframe has been removed from the DOM. In Edge, this\n            // results in \"Object expected\" errors being thrown when we\n            // try to access properties on window (global properties).\n            // For this reason, we try to access a global up front (clearTimeout)\n            // and if it fails we can assume the iframe has been removed\n            // and we ignore the message event.\n            if (!areGlobalsAccessible()) {\n                return;\n            }\n            if (event.source !== parent || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.SynAck) {\n                const callSender = handleSynAckMessage(event);\n                if (callSender) {\n                    window.removeEventListener(NativeEventType.Message, handleMessage);\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        sendSynMessage();\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (!error) {\n                error = new Error('Connection destroyed');\n                error.code = ErrorCode.ConnectionDestroyed;\n            }\n            reject(error);\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        }\n    };\n};\n","export default (debug) => {\n    /**\n     * Logs a message if debug is enabled.\n     */\n    return (...args) => {\n        if (debug) {\n            console.log('[Penpal]', ...args); // eslint-disable-line no-console\n        }\n    };\n};\n","import generateId from './generateId';\nimport { deserializeError } from './errorSerialization';\nimport { ErrorCode, MessageType, NativeEventType, Resolution } from './enums';\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodNames Names of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\nexport default (callSender, info, methodNames, destroyConnection, log) => {\n    const { localName, local, remote, originForSending, originForReceiving } = info;\n    let destroyed = false;\n    log(`${localName}: Connecting call sender`);\n    const createMethodProxy = (methodName) => {\n        return (...args) => {\n            log(`${localName}: Sending ${methodName}() call`);\n            // This handles the case where the iframe has been removed from the DOM\n            // (and therefore its window closed), the consumer has not yet\n            // called destroy(), and the user calls a method exposed by\n            // the remote. We detect the iframe has been removed and force\n            // a destroy() immediately so that the consumer sees the error saying\n            // the connection has been destroyed. We wrap this check in a try catch\n            // because Edge throws an \"Object expected\" error when accessing\n            // contentWindow.closed on a contentWindow from an iframe that's been\n            // removed from the DOM.\n            let iframeRemoved;\n            try {\n                if (remote.closed) {\n                    iframeRemoved = true;\n                }\n            }\n            catch (e) {\n                iframeRemoved = true;\n            }\n            if (iframeRemoved) {\n                destroyConnection();\n            }\n            if (destroyed) {\n                const error = new Error(`Unable to send ${methodName}() call due ` + `to destroyed connection`);\n                error.code = ErrorCode.ConnectionDestroyed;\n                throw error;\n            }\n            return new Promise((resolve, reject) => {\n                const id = generateId();\n                const handleMessageEvent = (event) => {\n                    if (event.source !== remote ||\n                        event.data.penpal !== MessageType.Reply ||\n                        event.data.id !== id) {\n                        return;\n                    }\n                    if (event.origin !== originForReceiving) {\n                        log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n                        return;\n                    }\n                    const replyMessage = event.data;\n                    log(`${localName}: Received ${methodName}() reply`);\n                    local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n                    let returnValue = replyMessage.returnValue;\n                    if (replyMessage.returnValueIsError) {\n                        returnValue = deserializeError(returnValue);\n                    }\n                    (replyMessage.resolution === Resolution.Fulfilled ? resolve : reject)(returnValue);\n                };\n                local.addEventListener(NativeEventType.Message, handleMessageEvent);\n                const callMessage = {\n                    penpal: MessageType.Call,\n                    id,\n                    methodName,\n                    args\n                };\n                remote.postMessage(callMessage, originForSending);\n            });\n        };\n    };\n    methodNames.reduce((api, methodName) => {\n        api[methodName] = createMethodProxy(methodName);\n        return api;\n    }, callSender);\n    return () => {\n        destroyed = true;\n    };\n};\n","import { MessageType } from '../enums';\n/**\n * Handles a SYN handshake message.\n */\nexport default (log, methods, childOrigin, originForSending) => {\n    return (event) => {\n        if (event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received SYN message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received SYN, responding with SYN-ACK');\n        const synAckMessage = {\n            penpal: MessageType.SynAck,\n            methodNames: Object.keys(methods)\n        };\n        event.source.postMessage(synAckMessage, originForSending);\n    };\n};\n","export { default as connectToChild } from './parent/connectToChild';\nexport { default as connectToParent } from './child/connectToParent';\nexport { ErrorCode } from './enums';\n","export default () => {\n    const callbacks = [];\n    let destroyed = false;\n    return {\n        destroy(error) {\n            destroyed = true;\n            callbacks.forEach(callback => {\n                callback(error);\n            });\n        },\n        onDestroy(callback) {\n            destroyed ? callback() : callbacks.push(callback);\n        }\n    };\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE_vOrQ__;","\n    export * from 'shared';\n    import { SharedModule } from 'shared';\n    export default SharedModule;\n  "],"sourceRoot":"webpack:///"}